#!/usr/bin/perl

#=============================================================================
# pzenoss_api
#
# By David Pirmann. This script is an interface to the JSON API exposed by the
# "Zenoss Core" product from www.zenoss.org. This script requires "zapi_toolkit" 
# from https://github.com/dpirmann/zenosstools
# See README and the project WIKI on above GITHUB site for more details.
#
# This script is hereby released under GNU General Public License version 2
# See http://www.gnu.org/licenses/gpl-2.0.html for details.
#=============================================================================

sub usage {
print <<EOF;

pzenoss_api is a basic interface to the Zenoss JSON API. It is a perl 
reimplemation of an existing bash zenoss_api script.

Syntax: pzenoss_api "endpoint" "action" "method" "data"

Examples:

pzenoss_api "device_router" "DeviceRouter" "getProductionStates" "{}"
pzenoss_api "device_router" "DeviceRouter" "getDeviceUids" "{\"uid\":\"/zport/dmd/Devices/Server/Linux\"}"

See: http://wiki.zenoss.org/Working_with_the_JSON_API for more examples
EOF

exit;
}

#requirements - 
# * unix utility "curl"
# * Perl module JSON::Parse
#set up
# * edit "ZENBASE", "ZAPIUSER", and "ZAPIPASS" vars.

#zenbase is the URL to your zenoss implementation
my $ZENBASE  = 'http://zenoss:8080';

#zapiuser/zapipass - user/pass to use the zenoss api.
my $ZAPIUSER = 'apiuser';
my $ZAPIPASS = 'zapiuser';

use JSON::Parse ':all';
use Data::Dumper;

#parse our arguments
my $ROUTER_ENDPOINT=shift;
my $ROUTER_ACTION=shift;
my $ROUTER_METHOD=shift;
my $DATA=shift;
my $output;

unless ($ROUTER_ENDPOINT && $ROUTER_ACTION && $ROUTER_METHOD && $DATA) {
    &usage;
}


print "Endpoint = $ROUTER_ENDPOINT\n";
print "Action   = $ROUTER_ACTION\n";
print "Method   = $ROUTER_METHOD\n";
print "Data     = $DATA\n";


$output = zcurlpost($ROUTER_ENDPOINT,$ROUTER_ACTION,$ROUTER_METHOD,$DATA);
my $parsed=parse_json($output);
print Dumper($parsed);
print "\n";	

exit;


#=============================================================================
# Function ZCURLPOST
# Invokes the curl post JSON api method
# zcurlpost <endpoint> <action> <method> <data>
# uses ZENBASE, ZAPIUSER, and ZAPIPASS variables
#=============================================================================
sub zcurlpost {
    my ($ROUTER_ENDPOINT,$ROUTER_ACTION,$ROUTER_METHOD,$DATA) = @_;

    #all the quote marks inside the data string have to be escaped.
    #i do it here so that the methods that call zcurlpost are a little
    #easier to read
    $DATA=~s/\"/\\"/g;

    #zenoss5 runs under a self signed SSL cert (https) by default;
    #so unless you have installed a real cert, ignore the warning
    my $ins;
    if ($ZENBASE =~ /^https/) {
        $ins=" --insecure "; #
    }

    #in the cmd there's those end of line escaped backslashes to make the command
    #a little easier to read
    my $cmd = qq(curl $ins -s -u "$ZAPIUSER:$ZAPIPASS" -X POST -H "Content-Type: application/json" \\
    -d "{\\"action\\":\\"$ROUTER_ACTION\\",\\"method\\":\\"$ROUTER_METHOD\\",\\"data\\":[$DATA], \\"tid\\":1}" \\
    "$ZENBASE/zport/dmd/$ROUTER_ENDPOINT");

    return qx($cmd);
}
