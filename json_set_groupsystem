#!/usr/bin/perl

#=============================================================================
# json_set_groupsystem
#
# By David Pirmann. This script is an interface to the JSON API exposed by the
# "Zenoss Core" product from www.zenoss.org. This script requires "zapi_toolkit" 
# from https://github.com/dpirmann/zenosstools
# See README and the project WIKI on above GITHUB site for more details.
#
# This script is hereby released under GNU General Public License version 2
# See http://www.gnu.org/licenses/gpl-2.0.html for details.
#=============================================================================

#=============================================================================
sub usage {
    print "$0: Add a host to an existing group or system category\n";
    print "Usage: $0 {group|system}=name hostname [hostname....]\n";
    print "If 'name' = 'list' then print out the available groups/systems and exit\n";
    exit;
}
#=============================================================================

use JSON::Parse ':all';
require 'zapi_toolkit.pl';

$debug=0;
$debugold=0;

my $task=shift;
my ($cat,$name) = split ('=',$task);

unless ($cat =~ /(group|system)/) {
    &usage;
}

my $method;
if ($cat eq 'group') {
    $method="getGroups";
} elsif ($cat eq 'system') {
    $method="getSystems";
} else {
    &usage;
}

#first retrieve list of valid names for $cat
my %catarry=&zapi_toolkit::get_valid_values($method);

if ($name eq "list") {
    foreach my $x (sort keys %catarry) {
	print "$x\n";
    }
    exit;
}

if (exists $catarry{$name}) {
    print "Selected $cat name $name exists... proceeding\n\n" if ($debug);
} else {
    print "Selected $cat name $name DOES NOT EXIST\n";
    exit;
}


$method=~s/get//; #getSystems -> Systems etc.
while (my $host=shift) {

    print "Setting host $host to $cat $name\n"  if ($debug);

    my $hostpath=&zapi_toolkit::gethostuid($host);
    unless ($hostpath =~ m|/zport/dmd/|) {
        print STDERR "Host $host not found.\n";
	next;
    } 	

    print "Host $host found at $hostpath, proceeding\n\n"  if ($debug);

    my $data=qq({"uids":["$hostpath"],"ranges":[],"target":"/zport/dmd/${method}${name}","asynchronous":false});
    my $output = &zapi_toolkit::zcurlpost("device_router","DeviceRouter","moveDevices",$data);
    my ($retval,$msg) = &ZenossPerl::catchJsonErrors($output);
    if ($retval) {
        print STDERR "${hostpath}, error: ${msg}\n";
    } else {
        print "${hostpath}, success\n";
    }

}


exit;



