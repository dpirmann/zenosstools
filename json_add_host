#!/usr/bin/perl

#=============================================================================
# json_add_host
#
# By David Pirmann. This script is an interface to the JSON API exposed by the
# "Zenoss Core" product from www.zenoss.org. This script requires "zapi_toolkit" 
# from https://github.com/dpirmann/zenosstools
# See README and the project WIKI on above GITHUB site for more details.
#
# This script is hereby released under GNU General Public License version 2
# See http://www.gnu.org/licenses/gpl-2.0.html for details.
#=============================================================================

#=============================================================================
sub usage {
    print "$0: Add a host to Zenoss\n";
    print "Usage: $0 hostname managedIP hostclass\n";
    exit;
}

use JSON::Parse ':all';
require 'zapi_toolkit.pl';

$debug=0;
$debugold=0;

$deviceName=shift;
$manageIp=shift;
$deviceClass=shift;

&usage unless ($deviceName && $deviceClass && $manageIp);

#find out the /zport/dmd/host/path for the given host argument
my $hostpath=&zapi_toolkit::gethostuid($manageIp);
if ($hostpath=~ m|/zport/dmd|) {
    die "Address $manageIp already in Zenoss.\n";
}

my $hostpath=&zapi_toolkit::gethostuid($deviceName);
if ($hostpath=~ m|/zport/dmd|) {
    die "deviceName $deviceName already in Zenoss.\n";
}

my $data=qq({"deviceName":"$deviceName","deviceClass":"$deviceClass","manageIp":"$manageIp","model":true});
my $output=&zapi_toolkit::zcurlpost("device_router","DeviceRouter","addDevice",$data);
my ($retval,$msg) = &ZenossPerl::catchJsonErrors($output);
if ($retval) {
    print "${deviceName} ($manageIp), error: ${msg}\n";
} else {
    print "${deviceName} ($manageIp), success\n";
}


exit;
